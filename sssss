#!/bin/bash
# sssss - screen saver stopper shell script
# is written by Jens Korte and may be redistributed under the terms of the AGPL 3

# TODO: auto check for installed screensaver, random start or only 1
# TODO: list all installed (and missing) screensaver
# TODO: maybe use setterm
# TODO: research: do some ss not need reset, support -HUP, support timeout?
# TODO: gdc supports timeout

PRG="cmatrix" # which screensaver to start
TIMEOUT=30 # how long will the screensaver run? e.g. 42 (seconds), 5m, 1h. See man s
leep for syntax.

# List of Programms and how they are started
# broken: xaos
PROGRAMS="aafire asciiquarium cacafire cmatrix"
declare -A PRG_CALL
PRG_CALL[aafire]="aafire -driver curses -dim -bold -reverse -extended"
PRG_CALL[asciiquarium]="asciiquarium"
PRG_CALL[cacaclock]="cacaclock -d %R:%S" # see man strftime for details
PRG_CALL[cacafire]="cacafire"
PRG_CALL[cmatrix]="cmatrix -b -u9"
#PRG_CALL[xaos]="xaos -dim -bold -normal -autopilot"

VERSION=0.10
CALL=${PRG_CALL[$PRG]}

case "$1" in
  "-h"|"--help")
    echo
    echo " This is  sssss  version: $VERSION"
    echo
    echo The screen saver stopper shell script saves some spare \'sources.
    echo "It (starts and) kills a console screensaver to stop the cpu from working."
    echo
    echo " SUPPORTED PARAMETERS"
    echo
    echo "-h|--help   shows this help"
    echo "--version   shows version"
    echo "-l|--list   lists the supported and installed screensavers"
    echo
    echo " HOW TO INSTALL/CONFIGURE"
    echo
    echo 1. Copy this script to your \~/bin
    echo 2. Make sure \~/bin is part of your \$PATH
    echo
    echo 3. Use this script in your \~/.screenrc:
    echo "  idle 1m"
    echo "  blankerprg sssss"
    echo
    echo 4. start screen
    echo
    echo DEPENDENCIES
    echo "needed:   bash, screen"
    echo optional: $PROGRAMS
    exit
  ;;
  "--version")
    echo
    echo " This is  sssss  version: $VERSION"
    echo
    exit
  ;;
  "-l"|"--list")
    echo
    echo Screensaver installed and supported by version $VERSION of sssss:
    echo
    echo -n "Found: "
    for s in $PROGRAMS;do which $s 2>&1 1>/dev/null && echo -n "$s ";done
    echo
    echo
    echo -n "Not found: "
    for s in $PROGRAMS;do which $s 2>&1 1>/dev/null || echo -n "$s ";done
    echo
    echo
    exit
  ;;
esac
unset DISPLAY #get cacaclock, cacafire, xaos in current terminal, not extra (x)term
$CALL &
SSPID=$!
sleep $TIMEOUT && kill $SSPID 2>&1 2>/dev/null
reset
